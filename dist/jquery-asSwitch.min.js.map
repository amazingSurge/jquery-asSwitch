{"version":3,"sources":["jquery-asSwitch.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsSwitchEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","_jquery2","obj","__esModule","default","_interopRequireDefault","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","DEFAULTS","namespace","skin","dragable","clickable","disabled","onText","offText","checked","animation","asSwitch","element","options","$element","wrap","$wrap","parent","meta","prop","extend","data","classes","on","off","addClass","initialized","_click","_trigger","init","value","opts","$inner","$innerBox","$on","$off","$handle","append","w","width","h","distance","proxy","click","mousedown","set","disable","eventType","_len","arguments","params","Array","_key","concat","trigger","NAMESPACE$1","onFunction","replace","word","substring","toUpperCase","apply","pos","callback","css","marginLeft","left","stop","animate","duration","complete","e","pageX","originalEvent","changedTouches","Math","max","min","dragDistance","that","startX","getDragPos","mousemove","current","move","mouseup","currPos","parseInt","abs","document","mousemove.asSwitch","mouseup.asSwitch","touchmove.asSwitch","touchend.asSwitch","one","update","removeClass","get"],"mappings":"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","file":"jquery-asSwitch.min.js","sourcesContent":["/**\n* jquery asSwitch v0.2.3\n* https://github.com/amazingSurge/jquery-asSwitch\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'asSwitch',\n  skin: 'default',\n\n  dragable: true,\n  clickable: true,\n  disabled: false,\n\n  onText: 'ON',\n  offText: 'OFF',\n\n  checked: true,\n  animation: 200\n};\n\nconst NAMESPACE$1 = 'asSwitch';\n\n/**\n * Plugin constructor\n **/\nclass asSwitch {\n  constructor(element, options) {\n    this.$element = $(element).wrap('<div></div>');\n    this.$wrap = this.$element.parent();\n\n    const meta = {\n      disabled: this.$element.prop('disabled'),\n      checked: this.$element.prop('checked')\n    };\n\n    this.options = $.extend({}, DEFAULTS, options, meta, this.$element.data());\n    this.namespace = this.options.namespace;\n    this.classes = {\n      skin: `${this.namespace}_${this.options.skin}`,\n      on: `${this.namespace}_on`,\n      off: `${this.namespace}_off`,\n      disabled: `${this.namespace}_disabled`\n    };\n\n    this.$wrap.addClass(this.namespace);\n\n    if (this.options.skin) {\n      this.$wrap.addClass(this.classes.skin);\n    }\n\n    this.checked = this.options.checked;\n    this.disabled = this.options.disabled;\n    this.initialized = false;\n\n    // flag\n    this._click = true;\n    this._trigger('init');\n    this.init();\n  }\n\n  init() {\n    const opts = this.options;\n\n    this.$inner = $(`<div class=\"${this.namespace}-inner\"></div>`);\n    this.$innerBox = $(`<div class=\"${this.namespace}-inner-box\"></div>`);\n    this.$on = $(`<div class=\"${this.namespace}-on\">${opts.onText}</div>`);\n    this.$off = $(`<div class=\"${this.namespace}-off\">${opts.offText}</div>`);\n    this.$handle = $(`<div class=\"${this.namespace}-handle\"></div>`);\n\n    this.$innerBox.append(this.$on, this.$off);\n    this.$inner.append(this.$innerBox);\n    this.$wrap.append(this.$inner, this.$handle);\n\n    // get components width\n    const w = this.$on.width();\n    const h = this.$handle.width();\n\n    this.distance = w - h / 2;\n\n    if (this.options.clickable === true) {\n      this.$wrap.on('click.asSwitch touchstart.asSwitch', $.proxy(this.click, this));\n    }\n\n    if (this.options.dragable === true) {\n      this.$handle.on('mousedown.asSwitch touchstart.asSwitch', $.proxy(this.mousedown, this));\n      this.$handle.on('click.asSwitch', () => false);\n    }\n\n    this.set(this.checked, false);\n    this.initialized = true;\n\n    this._trigger('ready');\n\n    if (this.disabled) {\n      this.disable();\n    }\n  }\n\n  _trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$element.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  animate(pos, callback) {\n    // prevent animate when first load\n    if (this.initialized === false) {\n      this.$innerBox.css({\n        marginLeft: pos\n      });\n\n      this.$handle.css({\n        left: this.distance + pos\n      });\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n      return false;\n    }\n\n    this.$innerBox.stop().animate({\n      marginLeft: pos\n    }, {\n      duration: this.options.animation,\n      complete: callback\n    });\n\n    this.$handle.stop().animate({\n      left: this.distance + pos\n    }, {\n      duration: this.options.animation\n    });\n  }\n\n  getDragPos(e) {\n    return e.pageX || ((e.originalEvent.changedTouches) ? e.originalEvent.changedTouches[0].pageX : 0);\n  }\n\n  move(pos) {\n    pos = Math.max(-this.distance, Math.min(pos, 0));\n\n    this.$innerBox.css({\n      marginLeft: pos\n    });\n\n    this.$handle.css({\n      left: this.distance + pos\n    });\n  }\n\n  click() {\n    if (!this._click) {\n      this._click = true;\n      return false;\n    }\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.checked) {\n      this.set(false);\n    } else {\n      this.set(true);\n    }\n\n    return false;\n  }\n\n  mousedown(e) {\n    let dragDistance;\n    const that = this;\n    const startX = this.getDragPos(e);\n\n    if (this.disabled) {\n      return;\n    }\n\n    this.mousemove = function(e) {\n      const current = this.getDragPos(e);\n      if (this.checked) {\n        dragDistance = current - startX > 0 ? 0 : (current - startX < -this.distance ? -this.distance : current - startX);\n      } else {\n        dragDistance = current - startX < 0 ? -this.distance : (current - startX > this.distance ? 0 : -this.distance + current - startX);\n      }\n\n      this.move(dragDistance);\n      this.$handle.off('mouseup.asSwitch');\n      return false;\n    };\n    this.mouseup = function() {\n      const currPos = parseInt(this.$innerBox.css('margin-left'), 10);\n      if (Math.abs(currPos) >= this.distance / 2) {\n        this.set(false);\n      }\n      if (Math.abs(currPos) < this.distance / 2) {\n        this.set(true);\n      }\n\n      $(document).off('.asSwitch');\n      this.$handle.off('mouseup.asSwitch');\n      return false;\n    };\n\n    $(document).on({\n      'mousemove.asSwitch': $.proxy(this.mousemove, this),\n      'mouseup.asSwitch': $.proxy(this.mouseup, this),\n      'touchmove.asSwitch': $.proxy(this.mousemove, this),\n      'touchend.asSwitch': $.proxy(this.mouseup, this)\n    });\n\n    if (this.options.clickable) {\n      this.$handle.one('mouseup.asSwitch touchend.asSwitch', () => {\n        if (that.checked) {\n          that.set(false);\n        } else {\n          that.set(true);\n        }\n        $(document).off('.asSwitch');\n      });\n    }\n\n    return false;\n  }\n\n  check() {\n    if (this.checked !== true) {\n      this.set(true);\n    }\n\n    return this;\n  }\n\n  uncheck() {\n    if (this.checked !== false) {\n      this.set(false);\n    }\n\n    return this;\n  }\n\n  set(value, update) {\n    const that = this;\n\n    this.checked = value;\n\n    if (value === true) {\n      this.animate(0, () => {\n        that.$wrap.removeClass(that.classes.off).addClass(that.classes.on);\n      });\n    } else {\n      this.animate(-this.distance, () => {\n        that.$wrap.removeClass(that.classes.on).addClass(that.classes.off);\n      });\n    }\n\n    if (update !== false) {\n      this.$element.prop('checked', value);\n      this.$element.trigger('change');\n      this._trigger('change', value);\n    }\n\n    return this;\n  }\n\n  get() {\n    return this.$element.prop('checked');\n  }\n\n  val(value) {\n    if (value) {\n      this.set(value);\n    } else {\n      return this.get();\n    }\n  }\n\n  enable() {\n    this.disabled = false;\n    this.$element.prop('disabled', false);\n    this.$wrap.removeClass(this.classes.disabled);\n    return this;\n  }\n\n  disable() {\n    this.disabled = true;\n    this.$element.prop('disabled', true);\n    this.$wrap.addClass(this.classes.disabled);\n    return this;\n  }\n\n  destroy() {\n    this.$wrap.off('.asSwitch');\n    this.$handle.off('.asSwitch');\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.2.3'\n};\n\nconst NAMESPACE = 'asSwitch';\nconst OtherAsSwitch = $.fn.asSwitch;\n\nconst jQueryAsSwitch = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)$/.test(method)) || (method === 'val' && args.length === 0)) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asSwitch(this, options));\n    }\n  });\n};\n\n$.fn.asSwitch = jQueryAsSwitch;\n\n$.asSwitch = $.extend({\n  setDefaults: asSwitch.setDefaults,\n  noConflict: function() {\n    $.fn.asSwitch = OtherAsSwitch;\n    return jQueryAsSwitch;\n  }\n}, info);\n"]}